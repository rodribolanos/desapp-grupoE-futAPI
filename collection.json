{
  "info": {
    "name": "FutApp API",
    "description": "Colección completa de endpoints para la API de FutApp",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:8080" },
    { "key": "accessToken", "value": "" },
    { "key": "refreshToken", "value": "" },
    { "key": "teamName", "value": "Boca Juniors" },
    { "key": "playerName", "value": "Lionel Messi" }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [ { "key": "token", "value": "{{accessToken}}", "type": "string" } ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "  const response = pm.response.json();",
                  "  pm.collectionVariables.set('accessToken', response.accessToken);",
                  "  pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "  console.log('Tokens saved successfully');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}" },
            "url": { "raw": "{{baseUrl}}/auth/register", "host": ["{{baseUrl}}"], "path": ["auth","register"] },
            "description": "Registra un nuevo usuario en el sistema"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const response = pm.response.json();",
                  "  pm.collectionVariables.set('accessToken', response.accessToken);",
                  "  pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "  console.log('Tokens saved successfully');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}" },
            "url": { "raw": "{{baseUrl}}/auth/login", "host": ["{{baseUrl}}"], "path": ["auth","login"] },
            "description": "Autentica un usuario existente"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const response = pm.response.json();",
                  "  pm.collectionVariables.set('accessToken', response.accessToken);",
                  "  pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "  console.log('Tokens refreshed successfully');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": { "type": "noauth" },
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}" },
            "url": { "raw": "{{baseUrl}}/auth/refresh", "host": ["{{baseUrl}}"], "path": ["auth","refresh"] },
            "description": "Renueva el access token usando el refresh token"
          },
          "response": []
        },
        {
          "name": "Login - Invalid Credentials (400)",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"username\": \"wrong\",\n  \"password\": \"wrong\"\n}" },
            "url": { "raw": "{{baseUrl}}/auth/login", "host": ["{{baseUrl}}"], "path": ["auth","login"] },
            "description": "Prueba de inicio de sesión con credenciales inválidas"
          },
          "response": []
        },
        {
          "name": "Refresh - Invalid Token (400)",
          "request": {
            "auth": { "type": "noauth" },
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"refreshToken\": \"invalid-token\"\n}" },
            "url": { "raw": "{{baseUrl}}/auth/refresh", "host": ["{{baseUrl}}"], "path": ["auth","refresh"] },
            "description": "Prueba de actualización con token inválido"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Teams",
      "item": [
        {
          "name": "Get Team Players",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": {
              "raw": "{{baseUrl}}/teams/{{teamName}}/players",
              "host": ["{{baseUrl}}"],
              "path": ["teams","{{teamName}}","players"]
            },
            "description": "Obtiene la lista de jugadores de un equipo específico"
          },
          "response": []
        },
        {
          "name": "Get Team Players - Team Not Found (404)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/teams/EquipoInexistente/players", "host": ["{{baseUrl}}"], "path": ["teams","EquipoInexistente","players"] },
            "description": "Prueba con un equipo que no existe"
          },
          "response": []
        },
        {
          "name": "Get Team Players - Unauthorized (403)",
          "request": {
            "auth": { "type": "noauth" },
            "method": "GET",
            "header": [],
            "url": { "raw": "{{baseUrl}}/teams/{{teamName}}/players", "host": ["{{baseUrl}}"], "path": ["teams","{{teamName}}","players"] },
            "description": "Prueba sin autorización"
          },
          "response": []
        },
        {
          "name": "Get Upcoming Fixtures",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": {
              "raw": "{{baseUrl}}/teams/{{teamName}}/fixtures/upcoming",
              "host": ["{{baseUrl}}"],
              "path": ["teams","{{teamName}}","fixtures","upcoming"]
            },
            "description": "Obtiene los próximos partidos de un equipo"
          },
          "response": []
        },
        {
          "name": "Get Upcoming Fixtures - Team Not Found (404)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/teams/EquipoInexistente/fixtures/upcoming", "host": ["{{baseUrl}}"], "path": ["teams","EquipoInexistente","fixtures","upcoming"] },
            "description": "Prueba de próximos partidos con un equipo que no existe"
          },
          "response": []
        },
        {
          "name": "Get Upcoming Fixtures - Unauthorized (403)",
          "request": {
            "auth": { "type": "noauth" },
            "method": "GET",
            "header": [],
            "url": { "raw": "{{baseUrl}}/teams/{{teamName}}/fixtures/upcoming", "host": ["{{baseUrl}}"], "path": ["teams","{{teamName}}","fixtures","upcoming"] },
            "description": "Prueba de próximos partidos sin autorización"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Players",
      "item": [
        {
          "name": "Get Player Performance",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": {
              "raw": "{{baseUrl}}/players/{{playerName}}/performance",
              "host": ["{{baseUrl}}"],
              "path": ["players","{{playerName}}","performance"]
            },
            "description": "Obtiene el rendimiento de un jugador específico"
          },
          "response": []
        },
        {
          "name": "Get Player Performance - Player Not Found (404)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/players/JugadorInexistente/performance", "host": ["{{baseUrl}}"], "path": ["players","JugadorInexistente","performance"] },
            "description": "Prueba de rendimiento de un jugador que no existe"
          },
          "response": []
        },
        {
          "name": "Get Player Performance - Unauthorized (403)",
          "request": {
            "auth": { "type": "noauth" },
            "method": "GET",
            "header": [],
            "url": { "raw": "{{baseUrl}}/players/{{playerName}}/performance", "host": ["{{baseUrl}}"], "path": ["players","{{playerName}}","performance"] },
            "description": "Prueba de rendimiento sin autorización"
          },
          "response": []
        }
      ]
    }
  ]
}
